name: Publish release binaries

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: publish
  cancel-in-progress: true

jobs:
  publish-container-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.ref_name }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: "{{defaultContext}}:src"
          file: CarbonAware.WebApi/src/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false

  upload-openapi-spec:
    needs: publish-container-image
    runs-on: ubuntu-latest
    services:
      casdk:
        #image: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
        image: ghcr.io/yasuenag/carbon-aware-sdk:${{ github.ref_name }}
        ports:
          - 8080:80
    steps:
      - name: Download OpenAPI spec
        run: wget http://localhost:8080/api/v1/swagger.yaml
      - name: Upload OpenAPI spec
        uses: actions/upload-artifact@v3
        with:
          name: spec-artifact
          path: swagger.yaml

  publish-java-client:
    needs: upload-openapi-spec
    permissions:
      packages: write
    uses: ./.github/workflows/java-client.yaml
    with:
      version: ${{ github.ref_name }}

  publish-js-client:
    needs: upload-openapi-spec
    permissions:
      packages: write
    uses: ./.github/workflows/js-client.yaml
    with:
      version: ${{ github.ref_name }}

  upload-apidoc:
    needs: [publish-java-client, publish-js-client]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout doc-website branch
        uses: actions/checkout@v3
        with:
          ref: doc-website
      - name: Prepare
        run: mkdir -p docs/apidocs/${{ github.ref_name }}
      - name: Download Javadoc
        uses: actions/download-artifact@v3
        with:
          name: javadoc
          path: docs/apidocs/${{ github.ref_name }}
      - name: Download JS documents
        uses: actions/download-artifact@v3
        with:
          name: js-documents
          path: docs/apidocs/${{ github.ref_name }}
      - name: Push documents
        run: |
          git add docs/apidocs/${{ github.ref_name }}
          git commit -m "Add client API docs for ${{ github.ref_name }}"
          git push origin doc-website
