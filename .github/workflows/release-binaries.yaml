name: Publish release binaries

on:
  # push event is for debugging
  push:
    branches: [gha-container, yasuenag-gha-java-client]
  release:
    types: [created]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read

concurrency:
  group: publish
  cancel-in-progress: true

jobs:
  publish-container-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.ref_name }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: "{{defaultContext}}:src"
          file: CarbonAware.WebApi/src/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false

  publish-java-client:
    needs: publish-container-image
    runs-on: ubuntu-latest
    permissions:
      packages: write
    services:
      casdk:
        #image: "ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
        image: "ghcr.io/yasuenag/carbon-aware-sdk:${{ github.ref_name }}"
        ports:
          - 8080:80
    steps:
      - name: Prepare
        run: |
          mkdir work pages
          npm install -g @openapitools/openapi-generator-cli@2.5.2
      - name: Generate client library
        run: |
          echo 'inputSpec: http://localhost:8080/api/v1/swagger.yaml' > batch.yaml
          echo 'generatorName: java' >> batch.yaml
          echo 'outputDir: work' >> batch.yaml
          echo 'additionalProperties:' >> batch.yaml
          echo '  apiPackage: foudation.greensoftware.carbonaware.webapi.client' >> batch.yaml
          echo '  artifactDescription: "Carbon Aware SDK client library for Java"' >> batch.yaml
          echo '  artifactId: casdk-client' >> batch.yaml
          echo "  artifactVersion: ${{ github.ref_name }}" >> batch.yaml
          echo '  developerOrganization: Green Software Foundation' >> batch.yaml
          echo '  developerOrganizationUrl: https://greensoftware.foundation/' >> batch.yaml
          echo '  groupId: foundation.greensoftware' >> batch.yaml
          echo '  licenseName: MIT License' >> batch.yaml
          echo '  scmUrl: https://github.com/Green-Software-Foundation/carbon-aware-sdk' >> batch.yaml
          echo '  artifactUrl: https://github.com/YaSuenag/carbon-aware-sdk/packages/' >> batch.yaml
          echo '  scmConnection: https://github.com/Green-Software-Foundation/carbon-aware-sdk.git' >> batch.yaml
          echo '  scmDeveloperConnection: https://github.com/Green-Software-Foundation/carbon-aware-sdk.git' >> batch.yaml
          echo '  licenseUrl: https://opensource.org/license/mit/' >> batch.yaml
          echo '  developerName: Green Software Foundation' >> batch.yaml
          echo '  developerEmail:' >> batch.yaml
          openapi-generator-cli batch batch.yaml
          sed -i "s|</project>|<distributionManagement><repository><id>github</id><name>GitHub Packages</name><url>https://maven.pkg.github.com/YaSuenag/carbon-aware-sdk</url></repository></distributionManagement></project>|" work/pom.xml
        shell: bash
      - name: Setup Java 8
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
      - name: Run Maven
        run: mvn -B -Dmaven.test.skip=true package javadoc:javadoc
        working-directory: work
      - name: Publish to GitHub Packages via Maven
        run: mvn deploy
        working-directory: work
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Prepare to upload Javadoc
        run: |
          mkdir pages/clients
          mv work/target/apidocs pages/clients/javadoc
        shell: bash
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: pages

  publish-javadoc:
    needs: publish-java-client
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
